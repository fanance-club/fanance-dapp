{
  "contractName": "Oracle",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_FANCTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_FANCTokenICOAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_FANCExchangeAddress",
          "type": "address"
        },
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "_priceFeedContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "FANCTokenAddress",
          "type": "address"
        }
      ],
      "name": "FANCTokenAddressSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FANCExchangeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FANCTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FANCTokenICOAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentOracleType",
      "outputs": [
        {
          "internalType": "enum Oracle.OracleType",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "priceFeedContract",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_oracleType",
          "type": "string"
        }
      ],
      "name": "changeCustomOracleStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_FANCTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_FANCTokenICOAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_FANCExchangeAddress",
          "type": "address"
        },
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "_priceFeedContract",
          "type": "address"
        }
      ],
      "name": "setContractAddresses",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAssetPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_FANCTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_FANCTokenICOAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_FANCExchangeAddress\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_priceFeedContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"FANCTokenAddress\",\"type\":\"address\"}],\"name\":\"FANCTokenAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"FANCExchangeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FANCTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FANCTokenICOAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_oracleType\",\"type\":\"string\"}],\"name\":\"changeCustomOracleStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentOracleType\",\"outputs\":[{\"internalType\":\"enum Oracle.OracleType\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceFeedContract\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_FANCTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_FANCTokenICOAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_FANCExchangeAddress\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_priceFeedContract\",\"type\":\"address\"}],\"name\":\"setContractAddresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"getAssetPrice()\":{\"notice\":\"Returns the latest price\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/raghu/Fanance/fanance-dapp/contracts/exchange-contracts/Oracle.sol\":\"Oracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/raghu/Fanance/fanance-dapp/contracts/FANC-token-contracts/FANCToken.sol\":{\"keccak256\":\"0xfda4946b87e844d4014ac96ac7283cec3079b43d34c7deea9d40ed62a3babf0a\",\"urls\":[\"bzz-raw://8a9b059bc774b1fc92ea565e799a248f42874ef07bb7ebdeab3fd9201db2d897\",\"dweb:/ipfs/QmcFbYvBJ3uFQgyzTTzh4NRcV23QwhsxdNxYNXg7PJQqcQ\"]},\"/Users/raghu/Fanance/fanance-dapp/contracts/FANC-token-contracts/FANCTokenICO.sol\":{\"keccak256\":\"0xd798a426095182d91087a6b50b85f425ecdfe58eddce1586785c70364a53f446\",\"urls\":[\"bzz-raw://f306f7128036ac85148b2c3ff47034d55317f62eb41176183a7131353048e491\",\"dweb:/ipfs/QmTEojJi2rFto8RzgBK3AYD1n3k8cUQiFUpgSaN4R6WDGC\"]},\"/Users/raghu/Fanance/fanance-dapp/contracts/_supportingContracts/AggregatorV3Interface.sol\":{\"keccak256\":\"0xd756c301b00e0c5ef9665ca989d5b7f846f14539ce081ea29e89d09894026214\",\"urls\":[\"bzz-raw://e9cc26aecda6e07d874dc926bc678c8f5f0c11d9809cbc90ecc6b27c5ca12414\",\"dweb:/ipfs/QmWE7BB63Vq4NJbBCxWcApVQ2FAT99y9ZkLVqitRUbJFcm\"]},\"/Users/raghu/Fanance/fanance-dapp/contracts/_supportingContracts/IERC20.sol\":{\"keccak256\":\"0x7c70ae3dfc1ea90d5b7743bbf026ad98e2d2be230a1eb5de39195e7ec70580a4\",\"urls\":[\"bzz-raw://f80ce3eb2a43c40a032ff637a5b4616432873e85ba8d0045dd19bdb61480a830\",\"dweb:/ipfs/QmUVrro8d1CtvMMaGmQbU5yjGcUH6VR6gEL84zVcajSQhK\"]},\"/Users/raghu/Fanance/fanance-dapp/contracts/_supportingContracts/MaticWETH.sol\":{\"keccak256\":\"0x1bfd850614608a5067c7058a3c8fd22d047f31ade1b6bbb0eee90aafa88afa07\",\"urls\":[\"bzz-raw://0fd70452830b93b0103fc6b776c4177bec0dd298075f4d66ebb69df4d0125751\",\"dweb:/ipfs/QmVU88e6eAK5seibh7HBEEUHq37J1kKzeaX3EKQwrzAP6p\"]},\"/Users/raghu/Fanance/fanance-dapp/contracts/_supportingContracts/Ownable.sol\":{\"keccak256\":\"0x899163ca4264fc54eb4a8af5acf9705d7c1dfef009a807a1c05dc405f79b9b4e\",\"urls\":[\"bzz-raw://f393e1f1dca3534b4e0a4bca04c4256c1d468e8fe1f4eb9d1027731ddeb71835\",\"dweb:/ipfs/Qmd6gR4xFZwjUKwckxtVBw79fNeWYHEuxUn742YS13c2VF\"]},\"/Users/raghu/Fanance/fanance-dapp/contracts/_supportingContracts/Pausable.sol\":{\"keccak256\":\"0xf7d3940086929c4827263d167116b79eaeb04ca08e8ac222d5d00c7c76d068da\",\"urls\":[\"bzz-raw://a56c9bcb76f6425f384124e0c8d52eea77c3ca721302e9113c6538092a5300b8\",\"dweb:/ipfs/QmcUgiEg8pBL7XFCfvb768fJLnNmBv1KSfbjfHHauM3Gj1\"]},\"/Users/raghu/Fanance/fanance-dapp/contracts/_supportingContracts/PauserRole.sol\":{\"keccak256\":\"0x6e8e54c4f492290161fd1551960b0682b3893df0432165cdf4a941ab3edb9063\",\"urls\":[\"bzz-raw://177b97a1599abe954a36fedced053dbbc2b4d8f55e6ff54e2aa031d9a41ed673\",\"dweb:/ipfs/QmYfupXEGhFVRkNFVB8Sc7duex5hb98UWFbBG2BUG1pAbB\"]},\"/Users/raghu/Fanance/fanance-dapp/contracts/_supportingContracts/Roles.sol\":{\"keccak256\":\"0x78920d81188ca714062a054672bfe8169459b641de1af495d7c48389b18c5580\",\"urls\":[\"bzz-raw://f68230c569031249a208b84fdc31d416476c589548541dda003d607c36a0e931\",\"dweb:/ipfs/QmSpTYdW3U8uhnJqBZTStq9XFf4vgZMSoeEQUo5Nqs9kmz\"]},\"/Users/raghu/Fanance/fanance-dapp/contracts/_supportingContracts/SafeMath.sol\":{\"keccak256\":\"0xfeed2546ec595615c46a695892206fc3bd74f224dcaa4edd21d47f64f89bf4d3\",\"urls\":[\"bzz-raw://cbffc47c632eaa063d3095f876d73c37d8d48abef05510f34033e768172f739b\",\"dweb:/ipfs/QmbQxejoPuoWXeQgRB8FrFKCdobFHxsyEskL2bFV3oSr8e\"]},\"/Users/raghu/Fanance/fanance-dapp/contracts/exchange-contracts/Oracle.sol\":{\"keccak256\":\"0xd568c24067ed414d8d99bb895e31f82c50001552e3634a88b9ab034f1f4f1a21\",\"urls\":[\"bzz-raw://5f7fb28a54d76a268f1ef2336b2bfe6c8682cbcfd620c9b6843bf70e68c723ff\",\"dweb:/ipfs/QmTJz59pfwjf9EMwVxBFmuibhKufcCrDNxzeg2cUi746rP\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a3d380380610a3d8339818101604052608081101561003357600080fd5b5080516020820151604080840151606090940151600080546001600160a01b031916331780825592519495939491926001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360048054600180546001600160a01b03199081166001600160a01b03988916179091556002805482169688169690961790955560038054909516938616939093179093556001600160a81b03199091169216919091179055610945806100f86000396000f3fe6080604052600436106100a75760003560e01c8063aaa6877711610064578063aaa687771461024b578063b17c324714610296578063e54f0880146102cf578063ee23909c146102f6578063f2fde38b1461030b578063fdff5fcd1461033e576100a7565b80631c30664e146100ff5780634b6f671014610130578063715018a61461014557806378b9ca7d1461015a5780638da5cb5b1461020d5780638f32d59b14610222575b60405133903480156108fc02916000818181858888f193505050506100fd5760405162461bcd60e51b815260040180806020018281038252602d81526020018061088d602d913960400191505060405180910390fd5b005b34801561010b57600080fd5b50610114610353565b604080516001600160a01b039092168252519081900360200190f35b34801561013c57600080fd5b50610114610362565b34801561015157600080fd5b506100fd610371565b34801561016657600080fd5b506100fd6004803603602081101561017d57600080fd5b81019060208101813564010000000081111561019857600080fd5b8201836020820111156101aa57600080fd5b803590602001918460018302840111640100000000831117156101cc57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103fe945050505050565b34801561021957600080fd5b5061011461055c565b34801561022e57600080fd5b5061023761056c565b604080519115158252519081900360200190f35b34801561025757600080fd5b506100fd6004803603608081101561026e57600080fd5b506001600160a01b03813581169160208101358216916040820135811691606001351661057d565b3480156102a257600080fd5b506102ab610610565b604051808260028111156102bb57fe5b60ff16815260200191505060405180910390f35b3480156102db57600080fd5b506102e4610620565b60408051918252519081900360200190f35b34801561030257600080fd5b50610114610759565b34801561031757600080fd5b506100fd6004803603602081101561032e57600080fd5b50356001600160a01b0316610768565b34801561034a57600080fd5b506101146107b4565b6002546001600160a01b031681565b6004546001600160a01b031681565b61037961056c565b6103b45760405162461bcd60e51b81526004018080602001828103825260298152602001806108646029913960400191505060405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b61040661056c565b6104415760405162461bcd60e51b81526004018080602001828103825260298152602001806108646029913960400191505060405180910390fd5b60408051808201909152600381526249434f60e81b6020918201528151908201207f2eed07af5bdc16d511d9d3be63ff87caf8cc9110a03ad1ebe3b7d0a8a5b294511415610497576004805460ff60a01b191690555b60408051808201909152600881526745584348414e474560c01b6020918201528151908201207f10b261d3bc7a74f38949f9212b0336103474898eda034c06ae0a3e478dc0e4a514156104f8576004805460ff60a01b1916600160a01b1790555b604080518082019091526008815267115615115493905360c21b6020918201528151908201207ff5b45a70bd80d38f3cb0e32e43161b54c18580bfc60b41dc6b995dbcbf980aa21415610559576004805460ff60a01b1916600160a11b1790555b50565b6000546001600160a01b03165b90565b6000546001600160a01b0316331490565b61058561056c565b6105c05760405162461bcd60e51b81526004018080602001828103825260298152602001806108646029913960400191505060405180910390fd5b600180546001600160a01b039586166001600160a01b0319918216179091556002805494861694821694909417909355600380549285169284169290921790915560048054919093169116179055565b600454600160a01b900460ff1681565b600080600454600160a01b900460ff16600281111561063b57fe5b14156106c257600260009054906101000a90046001600160a01b03166001600160a01b0316638e15f4736040518163ffffffff1660e01b815260040160206040518083038186803b15801561068f57600080fd5b505afa1580156106a3573d6000803e3d6000fd5b505050506040513d60208110156106b957600080fd5b50519050610569565b6001600454600160a01b900460ff1660028111156106dc57fe5b14156106ea57506001610569565b6002600454600160a01b900460ff16600281111561070457fe5b1415610569576004546001600160a01b03166107515760405162461bcd60e51b815260040180806020018281038252602a8152602001806108e7602a913960400191505060405180910390fd5b506001610569565b6003546001600160a01b031681565b61077061056c565b6107ab5760405162461bcd60e51b81526004018080602001828103825260298152602001806108646029913960400191505060405180910390fd5b610559816107c3565b6001546001600160a01b031681565b6001600160a01b0381166108085760405162461bcd60e51b815260040180806020018281038252602d8152602001806108ba602d913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f4e4c5920434f4e5452414354204f574e45522043414e20504552464f524d204f5045524154494f4e46616c6c6261636b2066756e6374696f6e20696e697469617465642062757420726566756e64206661696c656441444d494e20524f4c452043414e4e4f542042452041535349474e454420544f203078303020414444524553535072696365204665656420636f6e74726163742063616e6e6f7420626520307830302061646472657373a265627a7a72315820d5849392c6c97816aff9fc402e124ad70b6cfa716f9f241f0f4e851b24e3f70364736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c8063aaa6877711610064578063aaa687771461024b578063b17c324714610296578063e54f0880146102cf578063ee23909c146102f6578063f2fde38b1461030b578063fdff5fcd1461033e576100a7565b80631c30664e146100ff5780634b6f671014610130578063715018a61461014557806378b9ca7d1461015a5780638da5cb5b1461020d5780638f32d59b14610222575b60405133903480156108fc02916000818181858888f193505050506100fd5760405162461bcd60e51b815260040180806020018281038252602d81526020018061088d602d913960400191505060405180910390fd5b005b34801561010b57600080fd5b50610114610353565b604080516001600160a01b039092168252519081900360200190f35b34801561013c57600080fd5b50610114610362565b34801561015157600080fd5b506100fd610371565b34801561016657600080fd5b506100fd6004803603602081101561017d57600080fd5b81019060208101813564010000000081111561019857600080fd5b8201836020820111156101aa57600080fd5b803590602001918460018302840111640100000000831117156101cc57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103fe945050505050565b34801561021957600080fd5b5061011461055c565b34801561022e57600080fd5b5061023761056c565b604080519115158252519081900360200190f35b34801561025757600080fd5b506100fd6004803603608081101561026e57600080fd5b506001600160a01b03813581169160208101358216916040820135811691606001351661057d565b3480156102a257600080fd5b506102ab610610565b604051808260028111156102bb57fe5b60ff16815260200191505060405180910390f35b3480156102db57600080fd5b506102e4610620565b60408051918252519081900360200190f35b34801561030257600080fd5b50610114610759565b34801561031757600080fd5b506100fd6004803603602081101561032e57600080fd5b50356001600160a01b0316610768565b34801561034a57600080fd5b506101146107b4565b6002546001600160a01b031681565b6004546001600160a01b031681565b61037961056c565b6103b45760405162461bcd60e51b81526004018080602001828103825260298152602001806108646029913960400191505060405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b61040661056c565b6104415760405162461bcd60e51b81526004018080602001828103825260298152602001806108646029913960400191505060405180910390fd5b60408051808201909152600381526249434f60e81b6020918201528151908201207f2eed07af5bdc16d511d9d3be63ff87caf8cc9110a03ad1ebe3b7d0a8a5b294511415610497576004805460ff60a01b191690555b60408051808201909152600881526745584348414e474560c01b6020918201528151908201207f10b261d3bc7a74f38949f9212b0336103474898eda034c06ae0a3e478dc0e4a514156104f8576004805460ff60a01b1916600160a01b1790555b604080518082019091526008815267115615115493905360c21b6020918201528151908201207ff5b45a70bd80d38f3cb0e32e43161b54c18580bfc60b41dc6b995dbcbf980aa21415610559576004805460ff60a01b1916600160a11b1790555b50565b6000546001600160a01b03165b90565b6000546001600160a01b0316331490565b61058561056c565b6105c05760405162461bcd60e51b81526004018080602001828103825260298152602001806108646029913960400191505060405180910390fd5b600180546001600160a01b039586166001600160a01b0319918216179091556002805494861694821694909417909355600380549285169284169290921790915560048054919093169116179055565b600454600160a01b900460ff1681565b600080600454600160a01b900460ff16600281111561063b57fe5b14156106c257600260009054906101000a90046001600160a01b03166001600160a01b0316638e15f4736040518163ffffffff1660e01b815260040160206040518083038186803b15801561068f57600080fd5b505afa1580156106a3573d6000803e3d6000fd5b505050506040513d60208110156106b957600080fd5b50519050610569565b6001600454600160a01b900460ff1660028111156106dc57fe5b14156106ea57506001610569565b6002600454600160a01b900460ff16600281111561070457fe5b1415610569576004546001600160a01b03166107515760405162461bcd60e51b815260040180806020018281038252602a8152602001806108e7602a913960400191505060405180910390fd5b506001610569565b6003546001600160a01b031681565b61077061056c565b6107ab5760405162461bcd60e51b81526004018080602001828103825260298152602001806108646029913960400191505060405180910390fd5b610559816107c3565b6001546001600160a01b031681565b6001600160a01b0381166108085760405162461bcd60e51b815260040180806020018281038252602d8152602001806108ba602d913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f4e4c5920434f4e5452414354204f574e45522043414e20504552464f524d204f5045524154494f4e46616c6c6261636b2066756e6374696f6e20696e697469617465642062757420726566756e64206661696c656441444d494e20524f4c452043414e4e4f542042452041535349474e454420544f203078303020414444524553535072696365204665656420636f6e74726163742063616e6e6f7420626520307830302061646472657373a265627a7a72315820d5849392c6c97816aff9fc402e124ad70b6cfa716f9f241f0f4e851b24e3f70364736f6c63430005100032",
  "sourceMap": "184:3378:26:-;;;642:443;8:9:-1;5:2;;;30:1;27;20:12;5:2;642:443:26;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;642:443:26;;;;;;;;;;;;;;;;537:6:17;:19;;-1:-1:-1;;;;;;537:19:17;546:10;537:19;;;;571:40;;642:443:26;;;;;;-1:-1:-1;;;;;604:6:17;;571:40;;537:6;;571:40;846:17:26;:34;;-1:-1:-1;890:36:26;;-1:-1:-1;;;;;;890:36:26;;;-1:-1:-1;;;;;890:36:26;;;;;;;936:19;:42;;;;;;;;;;;;;;-1:-1:-1;988:42:26;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1040:38:26;;;;;;;;;;;184:3378;;;866:14;184:3378;;",
  "deployedSourceMap": "184:3378:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3456:26;;:10;;3472:9;3456:26;;;;;;;;;3472:9;3456:10;:26;;;;;;;3435:118;;;;-1:-1:-1;;;3435:118:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;184:3378;254:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;254:42:26;;;:::i;:::-;;;;-1:-1:-1;;;;;254:42:26;;;;;;;;;;;;;;444:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;444:46:26;;;:::i;1414:137:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1414:137:17;;;:::i;1091:515:26:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1091:515:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1091:515:26;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1091:515:26;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1091:515:26;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1091:515:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1091:515:26;;-1:-1:-1;1091:515:26;;-1:-1:-1;;;;;1091:515:26:i;681:77:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;681:77:17;;;:::i;1046:90::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1046:90:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;1612:427:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1612:427:26;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;1612:427:26;;;;;;;;;;;;;;;;;;;;;;;;:::i;542:35::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;542:35:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2093:1298;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2093:1298:26;;;:::i;:::-;;;;;;;;;;;;;;;;302:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;302:34:26;;;:::i;1722:107:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1722:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1722:107:17;-1:-1:-1;;;;;1722:107:17;;:::i;217:31:26:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;217:31:26;;;:::i;254:42::-;;;-1:-1:-1;;;;;254:42:26;;:::o;444:46::-;;;-1:-1:-1;;;;;444:46:26;;:::o;1414:137:17:-;885:9;:7;:9::i;:::-;877:63;;;;-1:-1:-1;;;877:63:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1512:1;1496:6;;1475:40;;-1:-1:-1;;;;;1496:6:17;;;;1475:40;;1512:1;;1475:40;1542:1;1525:19;;-1:-1:-1;;;;;;1525:19:17;;;1414:137::o;1091:515:26:-;885:9:17;:7;:9::i;:::-;877:63;;;;-1:-1:-1;;;877:63:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:12:26;;;;;;;;;;;;-1:-1:-1;;;1246:12:26;;;;;1203:29;;;;;;1236:23;1203:56;1199:121;;;1275:17;:34;;-1:-1:-1;;;;1275:34:26;;;1199:121;1376:17;;;;;;;;;;;;-1:-1:-1;;;1376:17:26;;;;;1333:29;;;;;;1366:28;1333:61;1329:131;;;1410:17;:39;;-1:-1:-1;;;;1410:39:26;-1:-1:-1;;;1410:39:26;;;1329:131;1516:17;;;;;;;;;;;;-1:-1:-1;;;1516:17:26;;;;;1473:29;;;;;;1506:28;1473:61;1469:131;;;1550:17;:39;;-1:-1:-1;;;;1550:39:26;-1:-1:-1;;;1550:39:26;;;1469:131;1091:515;:::o;681:77:17:-;719:7;745:6;-1:-1:-1;;;;;745:6:17;681:77;;:::o;1046:90::-;1086:4;1123:6;-1:-1:-1;;;;;1123:6:17;1109:10;:20;;1046:90::o;1612:427:26:-;885:9:17;:7;:9::i;:::-;877:63;;;;-1:-1:-1;;;877:63:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:16:26;:36;;-1:-1:-1;;;;;1844:36:26;;;-1:-1:-1;;;;;;1844:36:26;;;;;;;1890:19;:42;;;;;;;;;;;;;;;1942:19;:42;;;;;;;;;;;;;;;1994:17;:38;;;;;;;;;;;1612:427::o;542:35::-;;;-1:-1:-1;;;542:35:26;;;;;:::o;2093:1298::-;2139:7;;2162:17;;-1:-1:-1;;;2162:17:26;;;;:35;;;;;;;;;2158:1227;;;2284:19;;;;;;;;;-1:-1:-1;;;;;2284:19:26;-1:-1:-1;;;;;2271:48:26;;:50;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2271:50:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2271:50:26;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2271:50:26;;-1:-1:-1;2264:57:26;;2158:1227;2440:19;2419:17;;-1:-1:-1;;;2419:17:26;;;;:40;;;;;;;;;2415:970;;;-1:-1:-1;2482:1:26;2475:8;;2415:970;2525:19;2504:17;;-1:-1:-1;;;2504:17:26;;;;:40;;;;;;;;;2500:885;;;2585:17;;-1:-1:-1;;;;;2585:17:26;2560:155;;;;-1:-1:-1;;;2560:155:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3373:1:26;3366:8;;302:34;;;-1:-1:-1;;;;;302:34:26;;:::o;1722:107:17:-;885:9;:7;:9::i;:::-;877:63;;;;-1:-1:-1;;;877:63:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1794:28;1813:8;1794:18;:28::i;217:31:26:-;;;-1:-1:-1;;;;;217:31:26;;:::o;1973:266:17:-;-1:-1:-1;;;;;2059:22:17;;2038:114;;;;-1:-1:-1;;;2038:114:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:6;;;2167:38;;-1:-1:-1;;;;;2167:38:17;;;;2188:6;;;2167:38;;;2215:6;:17;;-1:-1:-1;;;;;;2215:17:17;-1:-1:-1;;;;;2215:17:17;;;;;;;;;;1973:266::o",
  "source": "pragma solidity =0.5.16;\n\nimport \"../_supportingContracts/AggregatorV3Interface.sol\";\nimport \"../_supportingContracts/Ownable.sol\";\nimport \"../FANC-token-contracts/FANCTokenICO.sol\";\n\ncontract Oracle is Ownable {\n    address public FANCTokenAddress;\n    address payable public FANCTokenICOAddress;\n    address public FANCExchangeAddress; // import FANCExchange contract and change FANCExchangeAddress to be exchange type instead of address\n    AggregatorV3Interface public priceFeedContract;\n    enum OracleType {ICO, EXCHANGE, EXTERNAL}\n    OracleType public currentOracleType;\n\n    event FANCTokenAddressSet(address FANCTokenAddress);\n\n    constructor(\n        address _FANCTokenAddress,\n        address payable _FANCTokenICOAddress,\n        address _FANCExchangeAddress,\n        AggregatorV3Interface _priceFeedContract\n    ) public {\n        currentOracleType = OracleType.ICO;\n        FANCTokenAddress = _FANCTokenAddress;\n        FANCTokenICOAddress = _FANCTokenICOAddress;\n        FANCExchangeAddress = _FANCExchangeAddress;\n        priceFeedContract = _priceFeedContract;\n    }\n\n    function changeCustomOracleStatus(string memory _oracleType)\n        public\n        onlyOwner\n    {\n        if (keccak256(bytes(_oracleType)) == keccak256(bytes(\"ICO\"))) {\n            currentOracleType = OracleType.ICO;\n        }\n        if (keccak256(bytes(_oracleType)) == keccak256(bytes(\"EXCHANGE\"))) {\n            currentOracleType = OracleType.EXCHANGE;\n        }\n        if (keccak256(bytes(_oracleType)) == keccak256(bytes(\"EXTERNAL\"))) {\n            currentOracleType = OracleType.EXTERNAL;\n        }\n    }\n\n    function setContractAddresses(\n        address _FANCTokenAddress,\n        address payable _FANCTokenICOAddress,\n        address _FANCExchangeAddress,\n        AggregatorV3Interface _priceFeedContract\n    ) public onlyOwner {\n        FANCTokenAddress = _FANCTokenAddress;\n        FANCTokenICOAddress = _FANCTokenICOAddress;\n        FANCExchangeAddress = _FANCExchangeAddress;\n        priceFeedContract = _priceFeedContract;\n    }\n\n    /**\n     * Returns the latest price\n     */\n    function getAssetPrice() public view returns (uint256) {\n        if (currentOracleType == OracleType.ICO) {\n            // Get latest price from FANC Exchange\n            return FANCTokenICO(FANCTokenICOAddress).getLatestPrice();\n            // return 1; // remove this when exchange implementation is done\n        } else if (currentOracleType == OracleType.EXCHANGE) {\n            return 1;\n        } else if (currentOracleType == OracleType.EXTERNAL) {\n            require(\n                priceFeedContract != AggregatorV3Interface(address(0)),\n                \"Price Feed contract cannot be 0x00 address\"\n            );\n            // Get price from Chainlink\n\n            // (\n            //     uint80 roundID,\n            //     int price,\n            //     uint startedAt,\n            //     uint timeStamp,\n            //     uint80 answeredInRound\n            // ) = priceFeedContract.latestRoundData();\n            // // If the round is not complete yet, timestamp is 0\n            // require(timeStamp > 0, \"Round not complete\");\n            // if(price >0) {\n            //     // Magnify the result based on decimals\n            //     return (uint256(price));\n            // }\n            // else {\n            //     return 0;\n            // }\n            return 1;\n        }\n    }\n\n    function() external payable {\n        require(\n            msg.sender.send(msg.value),\n            \"Fallback function initiated but refund failed\"\n        );\n    }\n}\n",
  "sourcePath": "/Users/raghu/Fanance/fanance-dapp/contracts/exchange-contracts/Oracle.sol",
  "ast": {
    "absolutePath": "/Users/raghu/Fanance/fanance-dapp/contracts/exchange-contracts/Oracle.sol",
    "exportedSymbols": {
      "Oracle": [
        8081
      ]
    },
    "id": 8082,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7873,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:26"
      },
      {
        "absolutePath": "/Users/raghu/Fanance/fanance-dapp/contracts/_supportingContracts/AggregatorV3Interface.sol",
        "file": "../_supportingContracts/AggregatorV3Interface.sol",
        "id": 7874,
        "nodeType": "ImportDirective",
        "scope": 8082,
        "sourceUnit": 1360,
        "src": "26:59:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/raghu/Fanance/fanance-dapp/contracts/_supportingContracts/Ownable.sol",
        "file": "../_supportingContracts/Ownable.sol",
        "id": 7875,
        "nodeType": "ImportDirective",
        "scope": 8082,
        "sourceUnit": 2966,
        "src": "86:45:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/raghu/Fanance/fanance-dapp/contracts/FANC-token-contracts/FANCTokenICO.sol",
        "file": "../FANC-token-contracts/FANCTokenICO.sol",
        "id": 7876,
        "nodeType": "ImportDirective",
        "scope": 8082,
        "sourceUnit": 1202,
        "src": "132:50:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7877,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2965,
              "src": "203:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2965",
                "typeString": "contract Ownable"
              }
            },
            "id": 7878,
            "nodeType": "InheritanceSpecifier",
            "src": "203:7:26"
          }
        ],
        "contractDependencies": [
          2965
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8081,
        "linearizedBaseContracts": [
          8081,
          2965
        ],
        "name": "Oracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7880,
            "name": "FANCTokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "217:31:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7879,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "217:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7882,
            "name": "FANCTokenICOAddress",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "254:42:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 7881,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "254:15:26",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7884,
            "name": "FANCExchangeAddress",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "302:34:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7883,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "302:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7886,
            "name": "priceFeedContract",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "444:46:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 7885,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1359,
              "src": "444:21:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Oracle.OracleType",
            "id": 7890,
            "members": [
              {
                "id": 7887,
                "name": "ICO",
                "nodeType": "EnumValue",
                "src": "513:3:26"
              },
              {
                "id": 7888,
                "name": "EXCHANGE",
                "nodeType": "EnumValue",
                "src": "518:8:26"
              },
              {
                "id": 7889,
                "name": "EXTERNAL",
                "nodeType": "EnumValue",
                "src": "528:8:26"
              }
            ],
            "name": "OracleType",
            "nodeType": "EnumDefinition",
            "src": "496:41:26"
          },
          {
            "constant": false,
            "id": 7892,
            "name": "currentOracleType",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "542:35:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_OracleType_$7890",
              "typeString": "enum Oracle.OracleType"
            },
            "typeName": {
              "contractScope": null,
              "id": 7891,
              "name": "OracleType",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7890,
              "src": "542:10:26",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_OracleType_$7890",
                "typeString": "enum Oracle.OracleType"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7896,
            "name": "FANCTokenAddressSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7894,
                  "indexed": false,
                  "name": "FANCTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7896,
                  "src": "610:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "609:26:26"
            },
            "src": "584:52:26"
          },
          {
            "body": {
              "id": 7928,
              "nodeType": "Block",
              "src": "836:249:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7907,
                      "name": "currentOracleType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7892,
                      "src": "846:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OracleType_$7890",
                        "typeString": "enum Oracle.OracleType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7908,
                        "name": "OracleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "866:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                          "typeString": "type(enum Oracle.OracleType)"
                        }
                      },
                      "id": 7909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "866:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OracleType_$7890",
                        "typeString": "enum Oracle.OracleType"
                      }
                    },
                    "src": "846:34:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OracleType_$7890",
                      "typeString": "enum Oracle.OracleType"
                    }
                  },
                  "id": 7911,
                  "nodeType": "ExpressionStatement",
                  "src": "846:34:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7912,
                      "name": "FANCTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "890:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7913,
                      "name": "_FANCTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7898,
                      "src": "909:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "890:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7915,
                  "nodeType": "ExpressionStatement",
                  "src": "890:36:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7916,
                      "name": "FANCTokenICOAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7882,
                      "src": "936:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7917,
                      "name": "_FANCTokenICOAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7900,
                      "src": "958:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "936:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 7919,
                  "nodeType": "ExpressionStatement",
                  "src": "936:42:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7920,
                      "name": "FANCExchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7884,
                      "src": "988:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7921,
                      "name": "_FANCExchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7902,
                      "src": "1010:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "988:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7923,
                  "nodeType": "ExpressionStatement",
                  "src": "988:42:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7924,
                      "name": "priceFeedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7886,
                      "src": "1040:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7925,
                      "name": "_priceFeedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7904,
                      "src": "1060:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1040:38:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 7927,
                  "nodeType": "ExpressionStatement",
                  "src": "1040:38:26"
                }
              ]
            },
            "documentation": null,
            "id": 7929,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7898,
                  "name": "_FANCTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7929,
                  "src": "663:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7897,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7900,
                  "name": "_FANCTokenICOAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7929,
                  "src": "698:36:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:15:26",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7902,
                  "name": "_FANCExchangeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7929,
                  "src": "744:28:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7904,
                  "name": "_priceFeedContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 7929,
                  "src": "782:40:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                    "typeString": "contract AggregatorV3Interface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7903,
                    "name": "AggregatorV3Interface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1359,
                    "src": "782:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "653:175:26"
            },
            "returnParameters": {
              "id": 7906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "836:0:26"
            },
            "scope": 8081,
            "src": "642:443:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7990,
              "nodeType": "Block",
              "src": "1189:417:26",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7938,
                              "name": "_oracleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7931,
                              "src": "1219:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 7937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1213:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 7939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1213:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7936,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1203:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1203:29:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "49434f",
                              "id": 7943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1252:5:26",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2eed07af5bdc16d511d9d3be63ff87caf8cc9110a03ad1ebe3b7d0a8a5b29451",
                                "typeString": "literal_string \"ICO\""
                              },
                              "value": "ICO"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2eed07af5bdc16d511d9d3be63ff87caf8cc9110a03ad1ebe3b7d0a8a5b29451",
                                "typeString": "literal_string \"ICO\""
                              }
                            ],
                            "id": 7942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1246:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 7944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1246:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7941,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1236:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1236:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1203:56:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7953,
                  "nodeType": "IfStatement",
                  "src": "1199:121:26",
                  "trueBody": {
                    "id": 7952,
                    "nodeType": "Block",
                    "src": "1261:59:26",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 7947,
                            "name": "currentOracleType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7892,
                            "src": "1275:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OracleType_$7890",
                              "typeString": "enum Oracle.OracleType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7948,
                              "name": "OracleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7890,
                              "src": "1295:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                                "typeString": "type(enum Oracle.OracleType)"
                              }
                            },
                            "id": 7949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1295:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OracleType_$7890",
                              "typeString": "enum Oracle.OracleType"
                            }
                          },
                          "src": "1275:34:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OracleType_$7890",
                            "typeString": "enum Oracle.OracleType"
                          }
                        },
                        "id": 7951,
                        "nodeType": "ExpressionStatement",
                        "src": "1275:34:26"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7956,
                              "name": "_oracleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7931,
                              "src": "1349:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 7955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1343:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 7957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1343:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7954,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1333:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1333:29:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "45584348414e4745",
                              "id": 7961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1382:10:26",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_10b261d3bc7a74f38949f9212b0336103474898eda034c06ae0a3e478dc0e4a5",
                                "typeString": "literal_string \"EXCHANGE\""
                              },
                              "value": "EXCHANGE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_10b261d3bc7a74f38949f9212b0336103474898eda034c06ae0a3e478dc0e4a5",
                                "typeString": "literal_string \"EXCHANGE\""
                              }
                            ],
                            "id": 7960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1376:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 7962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1376:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7959,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1366:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1366:28:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1333:61:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7971,
                  "nodeType": "IfStatement",
                  "src": "1329:131:26",
                  "trueBody": {
                    "id": 7970,
                    "nodeType": "Block",
                    "src": "1396:64:26",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 7965,
                            "name": "currentOracleType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7892,
                            "src": "1410:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OracleType_$7890",
                              "typeString": "enum Oracle.OracleType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7966,
                              "name": "OracleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7890,
                              "src": "1430:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                                "typeString": "type(enum Oracle.OracleType)"
                              }
                            },
                            "id": 7967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "EXCHANGE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1430:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OracleType_$7890",
                              "typeString": "enum Oracle.OracleType"
                            }
                          },
                          "src": "1410:39:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OracleType_$7890",
                            "typeString": "enum Oracle.OracleType"
                          }
                        },
                        "id": 7969,
                        "nodeType": "ExpressionStatement",
                        "src": "1410:39:26"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7974,
                              "name": "_oracleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7931,
                              "src": "1489:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 7973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1483:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 7975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1483:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7972,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1473:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1473:29:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "45585445524e414c",
                              "id": 7979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1522:10:26",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f5b45a70bd80d38f3cb0e32e43161b54c18580bfc60b41dc6b995dbcbf980aa2",
                                "typeString": "literal_string \"EXTERNAL\""
                              },
                              "value": "EXTERNAL"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f5b45a70bd80d38f3cb0e32e43161b54c18580bfc60b41dc6b995dbcbf980aa2",
                                "typeString": "literal_string \"EXTERNAL\""
                              }
                            ],
                            "id": 7978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1516:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 7980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1516:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7977,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1506:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1506:28:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1473:61:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7989,
                  "nodeType": "IfStatement",
                  "src": "1469:131:26",
                  "trueBody": {
                    "id": 7988,
                    "nodeType": "Block",
                    "src": "1536:64:26",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 7983,
                            "name": "currentOracleType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7892,
                            "src": "1550:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OracleType_$7890",
                              "typeString": "enum Oracle.OracleType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7984,
                              "name": "OracleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7890,
                              "src": "1570:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                                "typeString": "type(enum Oracle.OracleType)"
                              }
                            },
                            "id": 7985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "EXTERNAL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1570:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OracleType_$7890",
                              "typeString": "enum Oracle.OracleType"
                            }
                          },
                          "src": "1550:39:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OracleType_$7890",
                            "typeString": "enum Oracle.OracleType"
                          }
                        },
                        "id": 7987,
                        "nodeType": "ExpressionStatement",
                        "src": "1550:39:26"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 7991,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7934,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7933,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2898,
                  "src": "1175:9:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1175:9:26"
              }
            ],
            "name": "changeCustomOracleStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7931,
                  "name": "_oracleType",
                  "nodeType": "VariableDeclaration",
                  "scope": 7991,
                  "src": "1125:25:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7930,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1125:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1124:27:26"
            },
            "returnParameters": {
              "id": 7935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1189:0:26"
            },
            "scope": 8081,
            "src": "1091:515:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8020,
              "nodeType": "Block",
              "src": "1834:205:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8004,
                      "name": "FANCTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "1844:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8005,
                      "name": "_FANCTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7993,
                      "src": "1863:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1844:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8007,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:36:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8008,
                      "name": "FANCTokenICOAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7882,
                      "src": "1890:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8009,
                      "name": "_FANCTokenICOAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7995,
                      "src": "1912:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1890:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 8011,
                  "nodeType": "ExpressionStatement",
                  "src": "1890:42:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8012,
                      "name": "FANCExchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7884,
                      "src": "1942:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8013,
                      "name": "_FANCExchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7997,
                      "src": "1964:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1942:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8015,
                  "nodeType": "ExpressionStatement",
                  "src": "1942:42:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8016,
                      "name": "priceFeedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7886,
                      "src": "1994:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8017,
                      "name": "_priceFeedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7999,
                      "src": "2014:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1994:38:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 8019,
                  "nodeType": "ExpressionStatement",
                  "src": "1994:38:26"
                }
              ]
            },
            "documentation": null,
            "id": 8021,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8002,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8001,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2898,
                  "src": "1824:9:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1824:9:26"
              }
            ],
            "name": "setContractAddresses",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7993,
                  "name": "_FANCTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "1651:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1651:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7995,
                  "name": "_FANCTokenICOAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "1686:36:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:15:26",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7997,
                  "name": "_FANCExchangeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "1732:28:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7999,
                  "name": "_priceFeedContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "1770:40:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                    "typeString": "contract AggregatorV3Interface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7998,
                    "name": "AggregatorV3Interface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1359,
                    "src": "1770:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1641:175:26"
            },
            "returnParameters": {
              "id": 8003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:26"
            },
            "scope": 8081,
            "src": "1612:427:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8065,
              "nodeType": "Block",
              "src": "2148:1243:26",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_OracleType_$7890",
                      "typeString": "enum Oracle.OracleType"
                    },
                    "id": 8029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8026,
                      "name": "currentOracleType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7892,
                      "src": "2162:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OracleType_$7890",
                        "typeString": "enum Oracle.OracleType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 8027,
                        "name": "OracleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "2183:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                          "typeString": "type(enum Oracle.OracleType)"
                        }
                      },
                      "id": 8028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2183:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OracleType_$7890",
                        "typeString": "enum Oracle.OracleType"
                      }
                    },
                    "src": "2162:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_OracleType_$7890",
                        "typeString": "enum Oracle.OracleType"
                      },
                      "id": 8040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 8037,
                        "name": "currentOracleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7892,
                        "src": "2419:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OracleType_$7890",
                          "typeString": "enum Oracle.OracleType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8038,
                          "name": "OracleType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7890,
                          "src": "2440:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                            "typeString": "type(enum Oracle.OracleType)"
                          }
                        },
                        "id": 8039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "EXCHANGE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2440:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OracleType_$7890",
                          "typeString": "enum Oracle.OracleType"
                        }
                      },
                      "src": "2419:40:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_OracleType_$7890",
                          "typeString": "enum Oracle.OracleType"
                        },
                        "id": 8047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8044,
                          "name": "currentOracleType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7892,
                          "src": "2504:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OracleType_$7890",
                            "typeString": "enum Oracle.OracleType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8045,
                            "name": "OracleType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7890,
                            "src": "2525:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                              "typeString": "type(enum Oracle.OracleType)"
                            }
                          },
                          "id": 8046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "EXTERNAL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2525:19:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OracleType_$7890",
                            "typeString": "enum Oracle.OracleType"
                          }
                        },
                        "src": "2504:40:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 8062,
                      "nodeType": "IfStatement",
                      "src": "2500:885:26",
                      "trueBody": {
                        "id": 8061,
                        "nodeType": "Block",
                        "src": "2546:839:26",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                                    "typeString": "contract AggregatorV3Interface"
                                  },
                                  "id": 8055,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 8049,
                                    "name": "priceFeedContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7886,
                                    "src": "2585:17:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                                      "typeString": "contract AggregatorV3Interface"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "30",
                                            "id": 8052,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2636:1:26",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 8051,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2628:7:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": "address"
                                        },
                                        "id": 8053,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2628:10:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 8050,
                                      "name": "AggregatorV3Interface",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1359,
                                      "src": "2606:21:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1359_$",
                                        "typeString": "type(contract AggregatorV3Interface)"
                                      }
                                    },
                                    "id": 8054,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2606:33:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                                      "typeString": "contract AggregatorV3Interface"
                                    }
                                  },
                                  "src": "2585:54:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "5072696365204665656420636f6e74726163742063616e6e6f7420626520307830302061646472657373",
                                  "id": 8056,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2657:44:26",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_e95ed70cd93eb522638532cc6cccdf27f4ba6edbe11b5483c08f5b969fc0a649",
                                    "typeString": "literal_string \"Price Feed contract cannot be 0x00 address\""
                                  },
                                  "value": "Price Feed contract cannot be 0x00 address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_e95ed70cd93eb522638532cc6cccdf27f4ba6edbe11b5483c08f5b969fc0a649",
                                    "typeString": "literal_string \"Price Feed contract cannot be 0x00 address\""
                                  }
                                ],
                                "id": 8048,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  8099,
                                  8100
                                ],
                                "referencedDeclaration": 8100,
                                "src": "2560:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 8057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2560:155:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 8058,
                            "nodeType": "ExpressionStatement",
                            "src": "2560:155:26"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 8059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3373:1:26",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "functionReturnParameters": 8025,
                            "id": 8060,
                            "nodeType": "Return",
                            "src": "3366:8:26"
                          }
                        ]
                      }
                    },
                    "id": 8063,
                    "nodeType": "IfStatement",
                    "src": "2415:970:26",
                    "trueBody": {
                      "id": 8043,
                      "nodeType": "Block",
                      "src": "2461:33:26",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 8041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2482:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "functionReturnParameters": 8025,
                          "id": 8042,
                          "nodeType": "Return",
                          "src": "2475:8:26"
                        }
                      ]
                    }
                  },
                  "id": 8064,
                  "nodeType": "IfStatement",
                  "src": "2158:1227:26",
                  "trueBody": {
                    "id": 8036,
                    "nodeType": "Block",
                    "src": "2199:210:26",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8031,
                                  "name": "FANCTokenICOAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7882,
                                  "src": "2284:19:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 8030,
                                "name": "FANCTokenICO",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1201,
                                "src": "2271:12:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FANCTokenICO_$1201_$",
                                  "typeString": "type(contract FANCTokenICO)"
                                }
                              },
                              "id": 8032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2271:33:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FANCTokenICO_$1201",
                                "typeString": "contract FANCTokenICO"
                              }
                            },
                            "id": 8033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getLatestPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1191,
                            "src": "2271:48:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 8034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2271:50:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 8025,
                        "id": 8035,
                        "nodeType": "Return",
                        "src": "2264:57:26"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Returns the latest price",
            "id": 8066,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2115:2:26"
            },
            "returnParameters": {
              "id": 8025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8024,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8066,
                  "src": "2139:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2139:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2138:9:26"
            },
            "scope": 8081,
            "src": "2093:1298:26",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8079,
              "nodeType": "Block",
              "src": "3425:135:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8073,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8096,
                              "src": "3472:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3472:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8070,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8096,
                              "src": "3456:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3456:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 8072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3456:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 8075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3456:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46616c6c6261636b2066756e6374696f6e20696e697469617465642062757420726566756e64206661696c6564",
                        "id": 8076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3496:47:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b4c5d7c11ffbe218ab2991270c327a9264df524a766065b55fd958f8b2c8b39",
                          "typeString": "literal_string \"Fallback function initiated but refund failed\""
                        },
                        "value": "Fallback function initiated but refund failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b4c5d7c11ffbe218ab2991270c327a9264df524a766065b55fd958f8b2c8b39",
                          "typeString": "literal_string \"Fallback function initiated but refund failed\""
                        }
                      ],
                      "id": 8069,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8099,
                        8100
                      ],
                      "referencedDeclaration": 8100,
                      "src": "3435:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:118:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8078,
                  "nodeType": "ExpressionStatement",
                  "src": "3435:118:26"
                }
              ]
            },
            "documentation": null,
            "id": 8080,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3405:2:26"
            },
            "returnParameters": {
              "id": 8068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3425:0:26"
            },
            "scope": 8081,
            "src": "3397:163:26",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8082,
        "src": "184:3378:26"
      }
    ],
    "src": "0:3563:26"
  },
  "legacyAST": {
    "absolutePath": "/Users/raghu/Fanance/fanance-dapp/contracts/exchange-contracts/Oracle.sol",
    "exportedSymbols": {
      "Oracle": [
        8081
      ]
    },
    "id": 8082,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7873,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:26"
      },
      {
        "absolutePath": "/Users/raghu/Fanance/fanance-dapp/contracts/_supportingContracts/AggregatorV3Interface.sol",
        "file": "../_supportingContracts/AggregatorV3Interface.sol",
        "id": 7874,
        "nodeType": "ImportDirective",
        "scope": 8082,
        "sourceUnit": 1360,
        "src": "26:59:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/raghu/Fanance/fanance-dapp/contracts/_supportingContracts/Ownable.sol",
        "file": "../_supportingContracts/Ownable.sol",
        "id": 7875,
        "nodeType": "ImportDirective",
        "scope": 8082,
        "sourceUnit": 2966,
        "src": "86:45:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/raghu/Fanance/fanance-dapp/contracts/FANC-token-contracts/FANCTokenICO.sol",
        "file": "../FANC-token-contracts/FANCTokenICO.sol",
        "id": 7876,
        "nodeType": "ImportDirective",
        "scope": 8082,
        "sourceUnit": 1202,
        "src": "132:50:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7877,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2965,
              "src": "203:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2965",
                "typeString": "contract Ownable"
              }
            },
            "id": 7878,
            "nodeType": "InheritanceSpecifier",
            "src": "203:7:26"
          }
        ],
        "contractDependencies": [
          2965
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8081,
        "linearizedBaseContracts": [
          8081,
          2965
        ],
        "name": "Oracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7880,
            "name": "FANCTokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "217:31:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7879,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "217:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7882,
            "name": "FANCTokenICOAddress",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "254:42:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 7881,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "254:15:26",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7884,
            "name": "FANCExchangeAddress",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "302:34:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7883,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "302:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7886,
            "name": "priceFeedContract",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "444:46:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 7885,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1359,
              "src": "444:21:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Oracle.OracleType",
            "id": 7890,
            "members": [
              {
                "id": 7887,
                "name": "ICO",
                "nodeType": "EnumValue",
                "src": "513:3:26"
              },
              {
                "id": 7888,
                "name": "EXCHANGE",
                "nodeType": "EnumValue",
                "src": "518:8:26"
              },
              {
                "id": 7889,
                "name": "EXTERNAL",
                "nodeType": "EnumValue",
                "src": "528:8:26"
              }
            ],
            "name": "OracleType",
            "nodeType": "EnumDefinition",
            "src": "496:41:26"
          },
          {
            "constant": false,
            "id": 7892,
            "name": "currentOracleType",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "542:35:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_OracleType_$7890",
              "typeString": "enum Oracle.OracleType"
            },
            "typeName": {
              "contractScope": null,
              "id": 7891,
              "name": "OracleType",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7890,
              "src": "542:10:26",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_OracleType_$7890",
                "typeString": "enum Oracle.OracleType"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7896,
            "name": "FANCTokenAddressSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7894,
                  "indexed": false,
                  "name": "FANCTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7896,
                  "src": "610:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "609:26:26"
            },
            "src": "584:52:26"
          },
          {
            "body": {
              "id": 7928,
              "nodeType": "Block",
              "src": "836:249:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7907,
                      "name": "currentOracleType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7892,
                      "src": "846:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OracleType_$7890",
                        "typeString": "enum Oracle.OracleType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7908,
                        "name": "OracleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "866:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                          "typeString": "type(enum Oracle.OracleType)"
                        }
                      },
                      "id": 7909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "866:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OracleType_$7890",
                        "typeString": "enum Oracle.OracleType"
                      }
                    },
                    "src": "846:34:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OracleType_$7890",
                      "typeString": "enum Oracle.OracleType"
                    }
                  },
                  "id": 7911,
                  "nodeType": "ExpressionStatement",
                  "src": "846:34:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7912,
                      "name": "FANCTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "890:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7913,
                      "name": "_FANCTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7898,
                      "src": "909:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "890:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7915,
                  "nodeType": "ExpressionStatement",
                  "src": "890:36:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7916,
                      "name": "FANCTokenICOAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7882,
                      "src": "936:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7917,
                      "name": "_FANCTokenICOAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7900,
                      "src": "958:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "936:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 7919,
                  "nodeType": "ExpressionStatement",
                  "src": "936:42:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7920,
                      "name": "FANCExchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7884,
                      "src": "988:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7921,
                      "name": "_FANCExchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7902,
                      "src": "1010:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "988:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7923,
                  "nodeType": "ExpressionStatement",
                  "src": "988:42:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7924,
                      "name": "priceFeedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7886,
                      "src": "1040:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7925,
                      "name": "_priceFeedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7904,
                      "src": "1060:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1040:38:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 7927,
                  "nodeType": "ExpressionStatement",
                  "src": "1040:38:26"
                }
              ]
            },
            "documentation": null,
            "id": 7929,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7898,
                  "name": "_FANCTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7929,
                  "src": "663:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7897,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7900,
                  "name": "_FANCTokenICOAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7929,
                  "src": "698:36:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:15:26",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7902,
                  "name": "_FANCExchangeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7929,
                  "src": "744:28:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7904,
                  "name": "_priceFeedContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 7929,
                  "src": "782:40:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                    "typeString": "contract AggregatorV3Interface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7903,
                    "name": "AggregatorV3Interface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1359,
                    "src": "782:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "653:175:26"
            },
            "returnParameters": {
              "id": 7906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "836:0:26"
            },
            "scope": 8081,
            "src": "642:443:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7990,
              "nodeType": "Block",
              "src": "1189:417:26",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7938,
                              "name": "_oracleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7931,
                              "src": "1219:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 7937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1213:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 7939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1213:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7936,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1203:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1203:29:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "49434f",
                              "id": 7943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1252:5:26",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2eed07af5bdc16d511d9d3be63ff87caf8cc9110a03ad1ebe3b7d0a8a5b29451",
                                "typeString": "literal_string \"ICO\""
                              },
                              "value": "ICO"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2eed07af5bdc16d511d9d3be63ff87caf8cc9110a03ad1ebe3b7d0a8a5b29451",
                                "typeString": "literal_string \"ICO\""
                              }
                            ],
                            "id": 7942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1246:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 7944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1246:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7941,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1236:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1236:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1203:56:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7953,
                  "nodeType": "IfStatement",
                  "src": "1199:121:26",
                  "trueBody": {
                    "id": 7952,
                    "nodeType": "Block",
                    "src": "1261:59:26",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 7947,
                            "name": "currentOracleType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7892,
                            "src": "1275:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OracleType_$7890",
                              "typeString": "enum Oracle.OracleType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7948,
                              "name": "OracleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7890,
                              "src": "1295:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                                "typeString": "type(enum Oracle.OracleType)"
                              }
                            },
                            "id": 7949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1295:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OracleType_$7890",
                              "typeString": "enum Oracle.OracleType"
                            }
                          },
                          "src": "1275:34:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OracleType_$7890",
                            "typeString": "enum Oracle.OracleType"
                          }
                        },
                        "id": 7951,
                        "nodeType": "ExpressionStatement",
                        "src": "1275:34:26"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7956,
                              "name": "_oracleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7931,
                              "src": "1349:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 7955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1343:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 7957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1343:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7954,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1333:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1333:29:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "45584348414e4745",
                              "id": 7961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1382:10:26",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_10b261d3bc7a74f38949f9212b0336103474898eda034c06ae0a3e478dc0e4a5",
                                "typeString": "literal_string \"EXCHANGE\""
                              },
                              "value": "EXCHANGE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_10b261d3bc7a74f38949f9212b0336103474898eda034c06ae0a3e478dc0e4a5",
                                "typeString": "literal_string \"EXCHANGE\""
                              }
                            ],
                            "id": 7960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1376:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 7962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1376:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7959,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1366:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1366:28:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1333:61:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7971,
                  "nodeType": "IfStatement",
                  "src": "1329:131:26",
                  "trueBody": {
                    "id": 7970,
                    "nodeType": "Block",
                    "src": "1396:64:26",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 7965,
                            "name": "currentOracleType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7892,
                            "src": "1410:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OracleType_$7890",
                              "typeString": "enum Oracle.OracleType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7966,
                              "name": "OracleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7890,
                              "src": "1430:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                                "typeString": "type(enum Oracle.OracleType)"
                              }
                            },
                            "id": 7967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "EXCHANGE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1430:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OracleType_$7890",
                              "typeString": "enum Oracle.OracleType"
                            }
                          },
                          "src": "1410:39:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OracleType_$7890",
                            "typeString": "enum Oracle.OracleType"
                          }
                        },
                        "id": 7969,
                        "nodeType": "ExpressionStatement",
                        "src": "1410:39:26"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7974,
                              "name": "_oracleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7931,
                              "src": "1489:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 7973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1483:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 7975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1483:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7972,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1473:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1473:29:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "45585445524e414c",
                              "id": 7979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1522:10:26",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f5b45a70bd80d38f3cb0e32e43161b54c18580bfc60b41dc6b995dbcbf980aa2",
                                "typeString": "literal_string \"EXTERNAL\""
                              },
                              "value": "EXTERNAL"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f5b45a70bd80d38f3cb0e32e43161b54c18580bfc60b41dc6b995dbcbf980aa2",
                                "typeString": "literal_string \"EXTERNAL\""
                              }
                            ],
                            "id": 7978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1516:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 7980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1516:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7977,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1506:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1506:28:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1473:61:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7989,
                  "nodeType": "IfStatement",
                  "src": "1469:131:26",
                  "trueBody": {
                    "id": 7988,
                    "nodeType": "Block",
                    "src": "1536:64:26",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 7983,
                            "name": "currentOracleType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7892,
                            "src": "1550:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OracleType_$7890",
                              "typeString": "enum Oracle.OracleType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7984,
                              "name": "OracleType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7890,
                              "src": "1570:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                                "typeString": "type(enum Oracle.OracleType)"
                              }
                            },
                            "id": 7985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "EXTERNAL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1570:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OracleType_$7890",
                              "typeString": "enum Oracle.OracleType"
                            }
                          },
                          "src": "1550:39:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OracleType_$7890",
                            "typeString": "enum Oracle.OracleType"
                          }
                        },
                        "id": 7987,
                        "nodeType": "ExpressionStatement",
                        "src": "1550:39:26"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 7991,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7934,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7933,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2898,
                  "src": "1175:9:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1175:9:26"
              }
            ],
            "name": "changeCustomOracleStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7931,
                  "name": "_oracleType",
                  "nodeType": "VariableDeclaration",
                  "scope": 7991,
                  "src": "1125:25:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7930,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1125:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1124:27:26"
            },
            "returnParameters": {
              "id": 7935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1189:0:26"
            },
            "scope": 8081,
            "src": "1091:515:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8020,
              "nodeType": "Block",
              "src": "1834:205:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8004,
                      "name": "FANCTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7880,
                      "src": "1844:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8005,
                      "name": "_FANCTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7993,
                      "src": "1863:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1844:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8007,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:36:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8008,
                      "name": "FANCTokenICOAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7882,
                      "src": "1890:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8009,
                      "name": "_FANCTokenICOAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7995,
                      "src": "1912:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1890:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 8011,
                  "nodeType": "ExpressionStatement",
                  "src": "1890:42:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8012,
                      "name": "FANCExchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7884,
                      "src": "1942:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8013,
                      "name": "_FANCExchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7997,
                      "src": "1964:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1942:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8015,
                  "nodeType": "ExpressionStatement",
                  "src": "1942:42:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8016,
                      "name": "priceFeedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7886,
                      "src": "1994:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8017,
                      "name": "_priceFeedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7999,
                      "src": "2014:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1994:38:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 8019,
                  "nodeType": "ExpressionStatement",
                  "src": "1994:38:26"
                }
              ]
            },
            "documentation": null,
            "id": 8021,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8002,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8001,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2898,
                  "src": "1824:9:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1824:9:26"
              }
            ],
            "name": "setContractAddresses",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7993,
                  "name": "_FANCTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "1651:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1651:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7995,
                  "name": "_FANCTokenICOAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "1686:36:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:15:26",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7997,
                  "name": "_FANCExchangeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "1732:28:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7999,
                  "name": "_priceFeedContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 8021,
                  "src": "1770:40:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                    "typeString": "contract AggregatorV3Interface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7998,
                    "name": "AggregatorV3Interface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1359,
                    "src": "1770:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1641:175:26"
            },
            "returnParameters": {
              "id": 8003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:26"
            },
            "scope": 8081,
            "src": "1612:427:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8065,
              "nodeType": "Block",
              "src": "2148:1243:26",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_OracleType_$7890",
                      "typeString": "enum Oracle.OracleType"
                    },
                    "id": 8029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8026,
                      "name": "currentOracleType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7892,
                      "src": "2162:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OracleType_$7890",
                        "typeString": "enum Oracle.OracleType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 8027,
                        "name": "OracleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "2183:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                          "typeString": "type(enum Oracle.OracleType)"
                        }
                      },
                      "id": 8028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2183:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OracleType_$7890",
                        "typeString": "enum Oracle.OracleType"
                      }
                    },
                    "src": "2162:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_OracleType_$7890",
                        "typeString": "enum Oracle.OracleType"
                      },
                      "id": 8040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 8037,
                        "name": "currentOracleType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7892,
                        "src": "2419:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OracleType_$7890",
                          "typeString": "enum Oracle.OracleType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8038,
                          "name": "OracleType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7890,
                          "src": "2440:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                            "typeString": "type(enum Oracle.OracleType)"
                          }
                        },
                        "id": 8039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "EXCHANGE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2440:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OracleType_$7890",
                          "typeString": "enum Oracle.OracleType"
                        }
                      },
                      "src": "2419:40:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_OracleType_$7890",
                          "typeString": "enum Oracle.OracleType"
                        },
                        "id": 8047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8044,
                          "name": "currentOracleType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7892,
                          "src": "2504:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OracleType_$7890",
                            "typeString": "enum Oracle.OracleType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8045,
                            "name": "OracleType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7890,
                            "src": "2525:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_OracleType_$7890_$",
                              "typeString": "type(enum Oracle.OracleType)"
                            }
                          },
                          "id": 8046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "EXTERNAL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2525:19:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OracleType_$7890",
                            "typeString": "enum Oracle.OracleType"
                          }
                        },
                        "src": "2504:40:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 8062,
                      "nodeType": "IfStatement",
                      "src": "2500:885:26",
                      "trueBody": {
                        "id": 8061,
                        "nodeType": "Block",
                        "src": "2546:839:26",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                                    "typeString": "contract AggregatorV3Interface"
                                  },
                                  "id": 8055,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 8049,
                                    "name": "priceFeedContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7886,
                                    "src": "2585:17:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                                      "typeString": "contract AggregatorV3Interface"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "30",
                                            "id": 8052,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2636:1:26",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 8051,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2628:7:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": "address"
                                        },
                                        "id": 8053,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2628:10:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 8050,
                                      "name": "AggregatorV3Interface",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1359,
                                      "src": "2606:21:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1359_$",
                                        "typeString": "type(contract AggregatorV3Interface)"
                                      }
                                    },
                                    "id": 8054,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2606:33:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1359",
                                      "typeString": "contract AggregatorV3Interface"
                                    }
                                  },
                                  "src": "2585:54:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "5072696365204665656420636f6e74726163742063616e6e6f7420626520307830302061646472657373",
                                  "id": 8056,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2657:44:26",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_e95ed70cd93eb522638532cc6cccdf27f4ba6edbe11b5483c08f5b969fc0a649",
                                    "typeString": "literal_string \"Price Feed contract cannot be 0x00 address\""
                                  },
                                  "value": "Price Feed contract cannot be 0x00 address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_e95ed70cd93eb522638532cc6cccdf27f4ba6edbe11b5483c08f5b969fc0a649",
                                    "typeString": "literal_string \"Price Feed contract cannot be 0x00 address\""
                                  }
                                ],
                                "id": 8048,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  8099,
                                  8100
                                ],
                                "referencedDeclaration": 8100,
                                "src": "2560:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 8057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2560:155:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 8058,
                            "nodeType": "ExpressionStatement",
                            "src": "2560:155:26"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 8059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3373:1:26",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "functionReturnParameters": 8025,
                            "id": 8060,
                            "nodeType": "Return",
                            "src": "3366:8:26"
                          }
                        ]
                      }
                    },
                    "id": 8063,
                    "nodeType": "IfStatement",
                    "src": "2415:970:26",
                    "trueBody": {
                      "id": 8043,
                      "nodeType": "Block",
                      "src": "2461:33:26",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 8041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2482:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "functionReturnParameters": 8025,
                          "id": 8042,
                          "nodeType": "Return",
                          "src": "2475:8:26"
                        }
                      ]
                    }
                  },
                  "id": 8064,
                  "nodeType": "IfStatement",
                  "src": "2158:1227:26",
                  "trueBody": {
                    "id": 8036,
                    "nodeType": "Block",
                    "src": "2199:210:26",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8031,
                                  "name": "FANCTokenICOAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7882,
                                  "src": "2284:19:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 8030,
                                "name": "FANCTokenICO",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1201,
                                "src": "2271:12:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FANCTokenICO_$1201_$",
                                  "typeString": "type(contract FANCTokenICO)"
                                }
                              },
                              "id": 8032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2271:33:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FANCTokenICO_$1201",
                                "typeString": "contract FANCTokenICO"
                              }
                            },
                            "id": 8033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getLatestPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1191,
                            "src": "2271:48:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 8034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2271:50:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 8025,
                        "id": 8035,
                        "nodeType": "Return",
                        "src": "2264:57:26"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Returns the latest price",
            "id": 8066,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2115:2:26"
            },
            "returnParameters": {
              "id": 8025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8024,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8066,
                  "src": "2139:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2139:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2138:9:26"
            },
            "scope": 8081,
            "src": "2093:1298:26",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8079,
              "nodeType": "Block",
              "src": "3425:135:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8073,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8096,
                              "src": "3472:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3472:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8070,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8096,
                              "src": "3456:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3456:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 8072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3456:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 8075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3456:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46616c6c6261636b2066756e6374696f6e20696e697469617465642062757420726566756e64206661696c6564",
                        "id": 8076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3496:47:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b4c5d7c11ffbe218ab2991270c327a9264df524a766065b55fd958f8b2c8b39",
                          "typeString": "literal_string \"Fallback function initiated but refund failed\""
                        },
                        "value": "Fallback function initiated but refund failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b4c5d7c11ffbe218ab2991270c327a9264df524a766065b55fd958f8b2c8b39",
                          "typeString": "literal_string \"Fallback function initiated but refund failed\""
                        }
                      ],
                      "id": 8069,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8099,
                        8100
                      ],
                      "referencedDeclaration": 8100,
                      "src": "3435:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:118:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8078,
                  "nodeType": "ExpressionStatement",
                  "src": "3435:118:26"
                }
              ]
            },
            "documentation": null,
            "id": 8080,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3405:2:26"
            },
            "returnParameters": {
              "id": 8068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3425:0:26"
            },
            "scope": 8081,
            "src": "3397:163:26",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8082,
        "src": "184:3378:26"
      }
    ],
    "src": "0:3563:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xe71fe2d06f7b000076c62e3095dee0257b0c3495689fb20332f479637b1347fd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "FANCTokenAddress",
              "type": "address"
            }
          ],
          "name": "FANCTokenAddressSet",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x64e4dAA3b336259cb87a85d9eA24AAEF53C9900A",
      "transactionHash": "0x0dbe40c35eec299002090f1b8e918ad9082857bdde5df5d9b718ec240944d8e6"
    },
    "5777": {
      "events": {
        "0xe71fe2d06f7b000076c62e3095dee0257b0c3495689fb20332f479637b1347fd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "FANCTokenAddress",
              "type": "address"
            }
          ],
          "name": "FANCTokenAddressSet",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xB47239BE2C0A4eE22bA71ae182Ed774970252573",
      "transactionHash": "0xfa7cc772023205ae327b43a1de1d760693633ecc0824a5637825d2f7f9a2840a"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-01-03T14:35:29.850Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "getAssetPrice()": {
        "notice": "Returns the latest price"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}